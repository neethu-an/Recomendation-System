/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package kasr;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataOutputStream;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;

/**
 *
 * @author Administrator
 */
public class Loadprocess extends javax.swing.JFrame {

    /**
     * Creates new form Homepage
     */
    String type;
    public Loadprocess() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("User Preference based Recommender System for Service using ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Rank Boosting Approach on Hadoop");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(71, 71, 71))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Load Ratings Information");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Load Movie Information");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Load into HDFS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Load into HDFS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Get the User Preference");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Categorize the Information");

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Categorize");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Load User Information");

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("Load into HDFS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Configuration conf = new Configuration();
		try {
                      JFileChooser jf = new JFileChooser("./Files");
                      int rt = jf.showOpenDialog(null);
                      File file = null;
                      if (rt == JFileChooser.APPROVE_OPTION) {
                      file = jf.getSelectedFile();
                      }                     
                        FileSystem fs = FileSystem.get(conf);

			File f = file;
			FileInputStream inFile = new FileInputStream(f);
			Path outFile = new Path("/hadoop/mapred/system/movie.txt");
			System.out.println("file : " + f.getName() + "\t" + "filepath : "
					+ f.getAbsolutePath());


			FSDataOutputStream out = fs.create(outFile);
			System.out.println("out name : " + outFile.getName() + " \t "
					+ outFile.getFileSystem(conf));
			byte buffer[] = new byte[256];
			try {
				int bytesRead = 0;
				while ((bytesRead = inFile.read(buffer)) > 0) {
					out.write(buffer, 0, bytesRead);
					System.out.println("file written");
				}
				JOptionPane.showMessageDialog(null,"File Uploaded Successfully!");
			} catch (IOException e) {
				System.out.println("Error while copying file");
			} finally {
				inFile.close();
				out.close();
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Configuration conf = new Configuration();
		try {
                      JFileChooser jf = new JFileChooser("./Files");
                      int rt = jf.showOpenDialog(null);
                      File file = null;
                      if (rt == JFileChooser.APPROVE_OPTION) {
                      file = jf.getSelectedFile();
                      }                     
                        FileSystem fs = FileSystem.get(conf);

			File f = file;
			FileInputStream inFile = new FileInputStream(f);
			Path outFile = new Path("/hadoop/mapred/system/ratings.txt");
			System.out.println("file : " + f.getName() + "\t" + "filepath : "
					+ f.getAbsolutePath());

			

			FSDataOutputStream out = fs.create(outFile);
			System.out.println("out name : " + outFile.getName() + " \t "
					+ outFile.getFileSystem(conf));
			byte buffer[] = new byte[256];
			try {
				int bytesRead = 0;
				while ((bytesRead = inFile.read(buffer)) > 0) {
					out.write(buffer, 0, bytesRead);
					System.out.println("file written");
				}
				JOptionPane.showMessageDialog(null,"File Uploaded Successfully!");
			} catch (IOException e) {
				System.out.println("Error while copying file");
			} finally {
				inFile.close();
				out.close();
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Userpreference u=new Userpreference();
        u.setVisible(true);
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    	 Configuration conf = new Configuration();
 		try {
                       String ch;
                       JFileChooser jf = new JFileChooser("./Files");
                       int rt = jf.showOpenDialog(null);
                       File file = null;
                       if (rt == JFileChooser.APPROVE_OPTION) {
                       file = jf.getSelectedFile();
                       }                     
                         FileSystem fs = FileSystem.get(conf);
int iv=0;
 			File f = file;
 			FileReader fr=new FileReader(f);
                         BufferedReader br=new BufferedReader(fr);
                         Path outFile = new Path("/hadoop/mapred/system/categorize.txt");
                         BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(fs.create(outFile,true)));
                         while((ch=br.readLine())!=null)
                         {
                           try
         {
        StringTokenizer stt = new StringTokenizer(ch,"|");
       // System.out.println(stt.countTokens());
        while(stt.hasMoreTokens())
        {
        	try
        	{
                
        		 String a = stt.nextToken();
                 String b = stt.nextToken();
                 String c = stt.nextToken();
                 String d = stt.nextToken();
                 String e=stt.nextToken();
                 String f1=stt.nextToken();
                 String g=stt.nextToken();
                 String h=stt.nextToken();
                 String i=stt.nextToken();
                 String j=stt.nextToken();
                 String k=stt.nextToken();
                 String l=stt.nextToken();
                 String m=stt.nextToken();
                 String n=stt.nextToken();
                 String o=stt.nextToken();
                 String p=stt.nextToken();
                 String q=stt.nextToken();
                 String s=stt.nextToken();
                 String t=stt.nextToken();
                 String u=stt.nextToken();
                 String v=stt.nextToken();
                 String w=stt.nextToken();
                 String x=stt.nextToken();
                
                 System.out.println(a+b);
                 
                 int e1=Integer.parseInt(e);
                 int f11=Integer.parseInt(f1);
                 int g1=Integer.parseInt(g);
                 int h1=Integer.parseInt(h);
                 int i1=Integer.parseInt(i);
                 int j1=Integer.parseInt(j);
                 int k1=Integer.parseInt(k);
                 int l1=Integer.parseInt(l);
                 int m1=Integer.parseInt(m);
                 int n1=Integer.parseInt(n);
                 int o1=Integer.parseInt(o);
                 int p1=Integer.parseInt(p);
                 int q1=Integer.parseInt(q);
                 int s1=Integer.parseInt(s);
                 int t1=Integer.parseInt(t);
                 int u1=Integer.parseInt(u);
                 int v1=Integer.parseInt(v);
                 int w1=Integer.parseInt(w);
                 int x1=Integer.parseInt(x);        
                 
               if(e1==1)
               {
                    type="Unknown";
                    bw.write(a+","+b+","+type+"\n");
               
               }
               if(f11==1)
               {
                    type="Action";
                    bw.write(a+","+b+","+type+"\n");
               
               }
                if(g1==1)
               {
                    type="Adventure";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(h1==1)
               {
                    type="Animation";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(i1==1)
               {
                    type="Children";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(j1==1)
               {
                    type="comedy";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                 if(k1==1)
               {
                    type="Crime";
                    bw.write(a+","+b+","+type+"\n");
               
               } 
                 if(l1==1)
               {
                    type="Documentary";
                    bw.write(a+","+b+","+type+"\n");
               
               } 
                if(m1==1)
               {
                    type="Drama";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(n1==1)
               {
                    type="Fantasy";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(o1==1)
               {
                    type="FilmNoir";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(p1==1)
               {
                    type="Horror";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                if(q1==1)
               {
                    type="Musical";
                    bw.write(a+","+b+","+type+"\n");
               
               } 
                if(s1==1)
               {
                    type="Mystery";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
               if(t1==1)
               {
                    type="Romance";
                    bw.write(a+","+b+","+type+"\n");
               
               }   
                if(u1==1)
               {
                    type="SciFi";
                    bw.write(a+","+b+","+type+"\n");
               
               } 
                if(v1==1)
               {
                    type="Thriller";
                    bw.write(a+","+b+","+type+"\n");
               
               } 
               if(w1==1)
               {
                    type="War";
                    bw.write(a+","+b+","+type+"\n");
               
               }   
                if(x1==1)
               {
                    type="Western";
                    bw.write(a+","+b+","+type+"\n");
               
               }  
                System.out.println("count"+iv);
                 iv++;
        	}
        	catch(Exception e)
        	{
        		System.out.println(e);
        		
        	}
                         
        }
         }
                           catch(Exception e)
                           {
                             System.out.println(e);
                           }
                         
                         
                         
                         
                         
                         
                         }
                         
                         bw.close();
                         br.close();
                         fr.close();
                         
                JOptionPane.showMessageDialog(null,"Categorize Successfully");        
             
         
         }
         catch(Exception e)
         {
           System.out.println(e);
         }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try
        {
              JFileChooser jf = new JFileChooser("./Files");
               int rt = jf.showOpenDialog(null);
               File file = null;
               if (rt == JFileChooser.APPROVE_OPTION) {
               file = jf.getSelectedFile();
               }                     
               Configuration conf = new Configuration();
                 FileSystem fs = FileSystem.get(conf);

		File f = file;
		FileInputStream inFile = new FileInputStream(f);
		Path outFile = new Path("/hadoop/mapred/system/user.txt");
		System.out.println("file : " + f.getName() + "\t" + "filepath : "
				+ f.getAbsolutePath());

		

		FSDataOutputStream out = fs.create(outFile);
		System.out.println("out name : " + outFile.getName() + " \t "
				+ outFile.getFileSystem(conf));
		byte buffer[] = new byte[256];
		
			int bytesRead = 0;
			while ((bytesRead = inFile.read(buffer)) > 0) {
				out.write(buffer, 0, bytesRead);
				System.out.println("file written");
			}
			JOptionPane.showMessageDialog(null,"File Uploaded Successfully!");
        
			inFile.close();
			out.close();
			
			
			
        }
        catch(Exception e)
        {
          System.out.println(e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loadprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loadprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loadprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loadprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loadprocess().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
